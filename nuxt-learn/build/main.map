{"version":3,"sources":["webpack:///webpack/bootstrap 8b3af5c8b8617392ad17","webpack:///./server/index.js","webpack:///external \"koa\"","webpack:///external \"nuxt\"","webpack:///./server/interface/city.js","webpack:///external \"koa-router\"","webpack:///./nuxt.config.js"],"names":["start","app","Koa","host","process","env","HOST","port","PORT","config","require","dev","nuxt","Nuxt","builder","Builder","build","use","cityInterface","routes","allowedMethods","ctx","status","respond","req","render","res","listen","console","log","router","Router","prefix","get","body","list","module","exports","head","title","meta","charset","name","content","hid","link","rel","type","href","css","loading","color","extend","Client","isDev","rules","push","enforce","test","loader","exclude"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8b3af5c8b8617392ad17","import Koa from 'koa'\nimport { Nuxt, Builder } from 'nuxt'\nimport cityInterface from './interface/city'\n// import session from 'koa-session'\n\nasync function start() {\n  const app = new Koa()\n  const host = process.env.HOST || '127.0.0.1'\n  const port = process.env.PORT || 3000\n\n  // Import and Set Nuxt.js options\n  const config = require('../nuxt.config.js')\n  config.dev = !(app.env === 'production')\n\n  // mongodb\n\n  // session\n  // app.keys = ['some session']\n\n  // const CONFIG = {\n  //   key: 'SESSION', /** (string) cookie key (default is koa:sess) */\n  //   /** (number || 'session') maxAge in ms (default is 1 days) */\n  //   /** 'session' will result in a cookie that expires when session/browser is closed */\n  //   /** Warning: If a session cookie is stolen, this cookie will never expire */\n  //   maxAge: 86400000,\n  //   overwrite: true, /** (boolean) can overwrite or not (default true) */\n  //   httpOnly: true, /** (boolean) httpOnly or not (default true) */\n  //   signed: true, /** (boolean) signed or not (default true) */\n  //   rolling: false /** (boolean) Force a session identifier cookie to be set on every response. The expiration is reset to the original maxAge, resetting the expiration countdown. default is false **/\n  // }\n  // app.use(session(CONFIG, app))\n\n  // Instantiate nuxt.js\n  const nuxt = new Nuxt(config)\n\n  // Build in development\n  if (config.dev) {\n    const builder = new Builder(nuxt)\n    await builder.build()\n  }\n\n  app.use(cityInterface.routes()).use(cityInterface.allowedMethods())\n  app.use(ctx => {\n    ctx.status = 200\n    ctx.respond = false // Mark request as handled for Koa\n    ctx.req.ctx = ctx // This might be useful later on, e.g. in nuxtServerInit or with nuxt-stash\n    nuxt.render(ctx.req, ctx.res)\n  })\n\n  app.listen(port, host)\n  console.log('Server listening on ' + host + ':' + port) // eslint-disable-line no-console\n}\n\nstart()\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 2\n// module chunks = 0","import Router from 'koa-router'\n\nconst router = new Router({\n  prefix: '/city'\n})\n\nrouter.get('/list', async (ctx) => {\n  ctx.body = {\n    list: ['北京', '天津']\n  }\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/interface/city.js","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 4\n// module chunks = 0","module.exports = {\n  /*\n  ** Headers of the page\n  */\n  head: {\n    title: 'starter',\n    meta: [\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: 'Nuxt.js project' }\n    ],\n    link: [\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n    ]\n  },\n  /*\n  ** Global CSS\n  */\n  css: ['~assets/css/main.css'],\n  /*\n  ** Customize the progress-bar color\n  */\n  loading: { color: '#3B8070' },\n  /*\n   ** Build configuration\n   */\n  build: {\n    /*\n     ** Run ESLINT on save\n     */\n    extend(config, ctx) {\n      if (ctx.Client && ctx.isDev) {\n        config.module.rules.push({\n          enforce: 'pre',\n          test: /\\.(js|vue)$/,\n          loader: 'eslint-loader',\n          exclude: /(node_modules)/\n        })\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./nuxt.config.js"],"sourceRoot":""}